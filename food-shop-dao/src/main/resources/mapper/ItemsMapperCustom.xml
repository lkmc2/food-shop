<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lin.dao.ItemsMapperCustom" >

  <select id="queryItemComments" resultType="com.lin.vo.ItemCommentVO">
    select
      ic.comment_level as commentLevel,
      ic.content as content,
      ic.spec_name as specName,
      ic.create_time as createTime,
      u.face as userFace,
      u.nickname as nickname
    from items_comments ic
    left join users u on ic.user_id = u.id
    where ic.item_id = #{itemId, jdbcType=VARCHAR}
    <if test="level != null and level != ''">
      and ic.comment_level = #{level, jdbcType=INTEGER}
    </if>
  </select>

  <select id="searchItems" resultType="com.lin.vo.SearchItemsVO">
    with specInfo as (
        select
          item_id, min(price_discount) as price_discount
        from items_spec
        group by item_id
    )
    select
        i.id as itemId,
        i.item_name,
        i.sell_counts,
        i.sell_counts,
        img.url as imgUrl,
        sp.price_discount as price
    from items i
    left join items_img img on i.id = img.item_id
    left join specInfo sp on i.id = sp.item_id
    where img.is_main = 1
    <if test="keywords != null and keywords != ''">
      and i.item_name like concat('%', #{keywords}, '%')
    </if>
    order by
    <choose>
      <when test="sort == 'c'.toString() ">
        i.sell_counts desc
      </when>
      <when test="sort == 'p'.toString() ">
        sp.price_discount asc
      </when>
      <otherwise>
        i.item_name asc
      </otherwise>
    </choose>
  </select>
  <!-- 排序规则 -->
  <!-- k：默认排序，根据 name -->
  <!-- c：根据销量排序 -->
  <!-- p：根据价格排序 -->

  <select id="searchItemsByCat" resultType="com.lin.vo.SearchItemsVO">
    with specInfo as (
    select
    item_id, min(price_discount) as price_discount
    from items_spec
    group by item_id
    )
    select
    i.id as itemId,
    i.item_name,
    i.sell_counts,
    i.sell_counts,
    img.url as imgUrl,
    sp.price_discount as price
    from items i
    left join items_img img on i.id = img.item_id
    left join specInfo sp on i.id = sp.item_id
    where img.is_main = 1
    and i.cat_id = #{catId}
    order by
    <choose>
      <when test="sort == 'c'.toString() ">
        i.sell_counts desc
      </when>
      <when test="sort == 'p'.toString() ">
        sp.price_discount asc
      </when>
      <otherwise>
        i.item_name asc
      </otherwise>
    </choose>
  </select>
  <!-- 排序规则 -->
  <!-- k：默认排序，根据 name -->
  <!-- c：根据销量排序 -->
  <!-- p：根据价格排序 -->

</mapper>